// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/category/category.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecase/category/category.go -destination=internal/usecase/category/category.mock.go -package=category
//

// Package category is a generated GoMock package.
package category

import (
	context "context"
	reflect "reflect"

	dto "github.com/jackvonhouse/product-catalog/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockcategoryService is a mock of categoryService interface.
type MockcategoryService struct {
	ctrl     *gomock.Controller
	recorder *MockcategoryServiceMockRecorder
}

// MockcategoryServiceMockRecorder is the mock recorder for MockcategoryService.
type MockcategoryServiceMockRecorder struct {
	mock *MockcategoryService
}

// NewMockcategoryService creates a new mock instance.
func NewMockcategoryService(ctrl *gomock.Controller) *MockcategoryService {
	mock := &MockcategoryService{ctrl: ctrl}
	mock.recorder = &MockcategoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcategoryService) EXPECT() *MockcategoryServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockcategoryService) Create(arg0 context.Context, arg1 dto.CreateCategory) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockcategoryServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockcategoryService)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockcategoryService) Delete(arg0 context.Context, arg1 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockcategoryServiceMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockcategoryService)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockcategoryService) Get(arg0 context.Context, arg1 dto.GetCategory) ([]dto.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].([]dto.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockcategoryServiceMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockcategoryService)(nil).Get), arg0, arg1)
}

// Update mocks base method.
func (m *MockcategoryService) Update(arg0 context.Context, arg1 dto.UpdateCategory) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockcategoryServiceMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockcategoryService)(nil).Update), arg0, arg1)
}
